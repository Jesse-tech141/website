name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Install HTML validator with retry
      shell: pwsh
      run: |
        mkdir -p tools
        $retryCount = 0
        $maxRetries = 3
        $downloaded = $false
        
        while ($retryCount -lt $maxRetries -and !$downloaded) {
            try {
                Invoke-WebRequest -Uri "https://github.com/validator/validator/releases/latest/download/vnu.jar" -OutFile "tools/vnu.jar"
                if (Test-Path "tools/vnu.jar") {
                    $downloaded = $true
                }
            } catch {
                $retryCount++
                Start-Sleep -Seconds 10
            }
        }
        
        if (!$downloaded) {
            Write-Host "Validator download failed after $maxRetries attempts"
        }
    
    - name: Verify validator installation
      shell: pwsh
      run: |
        if (Test-Path "tools/vnu.jar") {
            java -jar tools/vnu.jar --version
        } else {
            Write-Host "Validator not available - some checks will be skipped"
        }
    
    - name: Run HTML validation
      shell: pwsh
      run: |
        if (Test-Path "tools/vnu.jar") {
            java -jar tools/vnu.jar --format xml --errors-only --skip-non-html . > html-validation-results.xml
        } else {
            Write-Host "Skipping HTML validation - validator not available"
        }
    
    - name: Publish HTML validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-validation-results
        path: html-validation-results.xml
    
    - name: Run ESLint
      run: |
        npx eslint script.js -f html -o eslint-report.html --fix || echo "ESLint completed"
    
    - name: Publish ESLint report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: eslint-report
        path: eslint-report.html
    
    - name: Run tests with JUnit output
      run: |
        npx jest --ci --reporters=default --reporters=jest-junit --outputFile=junit.xml
    
    - name: Publish test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: junit.xml
    
    - name: Build project
      run: |
        mkdir -p dist
        cp *.html dist/
        cp *.css dist/
        cp *.js dist/
        cp -r images dist/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: website-build
        path: dist/